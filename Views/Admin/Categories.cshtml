@model IEnumerable<JobExchangeMvc.Models.Category>

@{
    ViewData["Title"] = "Quản lý danh mục";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2><i class="fas fa-th-large"></i> Quản lý danh mục nghề nghiệp</h2>
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
            <i class="fas fa-plus"></i> Thêm danh mục
        </button>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Categories Grid -->
    <div class="row g-4">
        @foreach (var category in Model)
        {
            <div class="col-md-4 col-lg-3">
                <div class="card h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <h5 class="card-title mb-0">
                                <i class="fas fa-folder text-primary"></i> @category.Name
                            </h5>
                            @if (category.IsActive)
                            {
                                <span class="badge bg-success">Hoạt động</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Tạm dừng</span>
                            }
                        </div>
                        
                        @if (!string.IsNullOrEmpty(category.Description))
                        {
                            <p class="text-muted small mb-3">@category.Description</p>
                        }
                        
                        <div class="d-flex gap-2">
                            <button class="btn btn-sm btn-outline-primary flex-fill" 
                                    onclick="editCategory(@category.Id, '@category.Name', '@category.Description', @category.IsActive.ToString().ToLower())">
                                <i class="fas fa-edit"></i> Sửa
                            </button>
                            @if (category.IsActive)
                            {
                                <button class="btn btn-sm btn-outline-warning" 
                                        onclick="toggleCategory(@category.Id, false)">
                                    <i class="fas fa-pause"></i>
                                </button>
                            }
                            else
                            {
                                <button class="btn btn-sm btn-outline-success" 
                                        onclick="toggleCategory(@category.Id, true)">
                                    <i class="fas fa-play"></i>
                                </button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (!Model.Any())
    {
        <div class="text-center py-5">
            <i class="fas fa-folder-open fa-3x text-muted mb-3"></i>
            <p class="text-muted">Chưa có danh mục nào</p>
        </div>
    }
</div>

<!-- Add Category Modal -->
<div class="modal fade" id="addCategoryModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="fas fa-plus"></i> Thêm danh mục mới</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form asp-action="CreateCategory" method="post">
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    <div class="mb-3">
                        <label class="form-label">Tên danh mục <span class="text-danger">*</span></label>
                        <input type="text" name="name" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Mô tả</label>
                        <textarea name="description" class="form-control" rows="3"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Lưu
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Category Modal -->
<div class="modal fade" id="editCategoryModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="fas fa-edit"></i> Sửa danh mục</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form asp-action="UpdateCategory" method="post">
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="editCategoryId" />
                    <div class="mb-3">
                        <label class="form-label">Tên danh mục <span class="text-danger">*</span></label>
                        <input type="text" name="name" id="editCategoryName" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Mô tả</label>
                        <textarea name="description" id="editCategoryDescription" class="form-control" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input type="checkbox" name="isActive" id="editCategoryIsActive" class="form-check-input" />
                            <label class="form-check-label" for="editCategoryIsActive">Hoạt động</label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Cập nhật
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function editCategory(id, name, description, isActive) {
            document.getElementById('editCategoryId').value = id;
            document.getElementById('editCategoryName').value = name;
            document.getElementById('editCategoryDescription').value = description || '';
            document.getElementById('editCategoryIsActive').checked = isActive;
            
            var modal = new bootstrap.Modal(document.getElementById('editCategoryModal'));
            modal.show();
        }

        function toggleCategory(id, isActive) {
            if (confirm('Xác nhận thay đổi trạng thái danh mục này?')) {
                var form = document.createElement('form');
                form.method = 'POST';
                form.action = '@Url.Action("ToggleCategoryStatus")';
                
                var tokenInput = document.createElement('input');
                tokenInput.type = 'hidden';
                tokenInput.name = '__RequestVerificationToken';
                tokenInput.value = document.querySelector('input[name="__RequestVerificationToken"]').value;
                form.appendChild(tokenInput);
                
                var idInput = document.createElement('input');
                idInput.type = 'hidden';
                idInput.name = 'id';
                idInput.value = id;
                form.appendChild(idInput);
                
                var activeInput = document.createElement('input');
                activeInput.type = 'hidden';
                activeInput.name = 'isActive';
                activeInput.value = isActive;
                form.appendChild(activeInput);
                
                document.body.appendChild(form);
                form.submit();
            }
        }
    </script>
}
